<?php

namespace Netresearch\Composer\Patches;

use Composer\Installer\MetapackageInstaller;
use Composer\Package\PackageInterface;
use Composer\Repository\InstalledRepositoryInterface;

/**
 * This is just a noop installer to enable packages of type "patches"
 * The patch application is done in the plugin and is not limited to
 * "patches"-packages: Every package that has patches in it's extras
 * is respected there.
 *
 * @deprecated Use package type 'metapackage' instead
 * @author     Christian Opitz <christian.opitz at netresearch.de>
 */
class Installer extends MetapackageInstaller
{
    /**
     * @var \Composer\IO\IOInterface
     */
    protected $io;

    function __construct(\Composer\IO\IOInterface $io)
    {
        $this->io = $io;
    }

    /**
     * Supports packages of type "patches"
     *
     * @param string $packageType
     *
     * @return boolean
     */
    public function supports($packageType)
    {
        return $packageType == 'patches';
    }

    public function isInstalled(InstalledRepositoryInterface $repo, PackageInterface $package)
    {
        $this->handleDeprecatedType($package);
        return parent::isInstalled($repo, $package);
    }

    protected function handleDeprecatedType(PackageInterface $package)
    {
        $this->io->write(
            "<warning>Package type 'patches' is deprecated ({$package}):</warning>"
            . " Use 'metapackage' instead."
        );
        if (method_exists($package, 'setType')) {
            $package->setType('metapackage');
        }
    }

    public function install(InstalledRepositoryInterface $repo, PackageInterface $package)
    {
        $this->handleDeprecatedType($package);
        parent::install($repo, $package);
    }

    public function update(InstalledRepositoryInterface $repo, PackageInterface $initial, PackageInterface $target)
    {
        $this->handleDeprecatedType($target);
        parent::update($repo, $initial, $target); // TODO: Change the autogenerated stub
    }
}
